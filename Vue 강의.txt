https://github.com/joshua1988/learn-vue-js

# View
MVVM 패턴의 뷰모델(ViewModel) 에리어에 해당하는 화면(View)단 라이브러리
View (DOM) -> ViewModel (DOM Listener, Data Bindings) -> Model (Plain JavaScript Objects)

# 뷰 컴포넌트
컴포넌트는 화면의 영역을 구분하여 개발할 수 있는 뷰의 기능
컴포넌트 기반으로 화면을 개발하게 되면 코드의 재사용성이 올라가고 빠르게 화면을 제작
컴포넌트 간에 관계를 가짐
인스턴스는 기본적으로 루트 컴포넌트
전역 컴포넌트는 인스턴스에 자동으로 등록

# 컴포넌트 통신
뷰 컴포넌트는 각각 고유한 데이터 유효 범위를 갖음 -> 컴포넌트 간에 데이터를 주고 받기 위해선 아래와 같은 규칙을 따라야함
[하위 컴포넌트] -> [이벤트 발생] -> [상위 컴포넌트]
[하위 컴포넌트] <- [props 전달] <- [상위 컴포넌트]

# 엑시오스 AXIOS
뷰에서 권고하는 HTTP 통신 라이브러리
Promise 기반의 HTTP 통신 라이브러리이며 상대적으로 다른 HTTP 통신 라이브러리들에 비해 문서화가 잘되어 있고 API가 다양함

- 자바스크립트의 비동기 처리 패턴
1. callback
https://joshua1988.github.io/web-development/javascript/javascript-asynchronous-operation/
2. promise
https://joshua1988.github.io/web-development/javascript/promise-for-beginners/
3. promise + generator
4. async & await
https://joshua1988.github.io/web-development/javascript/js-async-await/

- 프론트엔드 개발자가 알아야하는 HTTP 프로토콜
https://joshua1988.github.io/web-development/http-part1/
https://developer.chrome.com/docs/devtools/

# 뷰 템플릿
뷰 템플릿 문법 : 뷰로 화면을 조작하는 방법
데이터 바인딩과 디렉티브로 나뉨

- 데이터 바인딩
뷰 인스턴스에서 정의한 속성들을 화면헤 표시하는 방법
기본적인 데이터 바인딩 방식은 {{}}

- 디렉티브
뷰로 화면의 요소를 더 쉽게 조작하기 위한 문법
화면 조작에서 자주 사용되는 방식들을 모아 디렉티브 형태로 제공 : v-

# 싱글 파일 컴포넌트

# ES6
ECMAScript 2015와 동일한 용어
2015년 ES5(2009년)이래로 진행한 첫 메이저 업데이트가 승인된 해
최신 Front-End Framwork인 React, Angular, Vue에서 권고하는 언어 형식
ES5에 비해 문법이 간결해져서 익숙해지면 코딩을 훨씬 편하게 할 수 있음

- Babel
구버번 브라우저 중에서는 ES6의 기능을 지원하지 않는 브라우저가 있으므로 transpiling이 필요
ES6의 문법을 각 브라우저의 호환 가능한 ES5로 변환하는 컴파일러

- const & let : 새로운 변수 선언 방식
블록단위 {} 로 변수의 범위가 제한되었음
const : 한번 선언한 값에 대해서 변경할 수 없음, 객체나 배령의 내부는 변경할 수 있음 -> 상수
let : 한번 선언한 값에 대해서 다시 선언할 수 없음

- ES5 특징 : Hoisting
Hosting이란 선언한 함수와 변수를 해석기가 가장 상단에 있는 것처럼 인식
js 해석기는 코드의 라인 순서와 관계없이 함수선언식과 변수를 위한 메모리 공간을 먼저 확보
function a()와 var는 코드의 최상단으로 끌어올려진 것 처럼 보임

- Arrow Function : 화살표 함수
함수를 정의할 때 function이라는 키워드를 사용하지 않고 =>로 대체
흔히 사용하는 콜백 함수의 문법을 간결화

- Enhanced Object Literals : 향상된 객체 리터럴
객체의 속성을 메서드롤 사용할 때 function 예약어을 생략하고 생성 가능
객체의 속성명과 값 명이 동일할 때 아래와 같이 축약 가능
var figures = 10;
var dictionary = {
  // figures: figures
  figures
};

- Modules : 자바스크립트 모듈화 방법
자밧그크립트 모듈 로더 라이브러리(AMD, Commons JS)기능을 js 언어 자체에서 지원
호출되기 전까지는 코드 실행과 동작을 하지 않는 특징이 있음

# Vuex : 상태 관리 라이브러리


















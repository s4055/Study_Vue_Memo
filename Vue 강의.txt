# View
MVVM 패턴의 뷰모델(ViewModel) 에리어에 해당하는 화면(View)단 라이브러리
View (DOM) -> ViewModel (DOM Listener, Data Bindings) -> Model (Plain JavaScript Objects)

# 뷰 컴포넌트
컴포넌트는 화면의 영역을 구분하여 개발할 수 있는 뷰의 기능
컴포넌트 기반으로 화면을 개발하게 되면 코드의 재사용성이 올라가고 빠르게 화면을 제작
컴포넌트 간에 관계를 가짐
인스턴스는 기본적으로 루트 컴포넌트
전역 컴포넌트는 인스턴스에 자동으로 등록

# 컴포넌트 통신
뷰 컴포넌트는 각각 고유한 데이터 유효 범위를 갖음 -> 컴포넌트 간에 데이터를 주고 받기 위해선 아래와 같은 규칙을 따라야함
[하위 컴포넌트] -> [이벤트 발생] -> [상위 컴포넌트]
[하위 컴포넌트] <- [props 전달] <- [상위 컴포넌트]

# 엑시오스 AXIOS
뷰에서 권고하는 HTTP 통신 라이브러리
Promise 기반의 HTTP 통신 라이브러리이며 상대적으로 다른 HTTP 통신 라이브러리들에 비해 문서화가 잘되어 있고 API가 다양함

- 자바스크립트의 비동기 처리 패턴
1. callback
https://joshua1988.github.io/web-development/javascript/javascript-asynchronous-operation/
2. promise
https://joshua1988.github.io/web-development/javascript/promise-for-beginners/
3. promise + generator
4. async & await
https://joshua1988.github.io/web-development/javascript/js-async-await/

- 프론트엔드 개발자가 알아야하는 HTTP 프로토콜
https://joshua1988.github.io/web-development/http-part1/
https://developer.chrome.com/docs/devtools/
